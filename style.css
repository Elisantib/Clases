/* selector global */
* {
  box-sizing: content-box;
}

body,
html {
  padding: 0px;
  margin: 0px;
}

.myli {
  background-color: bisque;
  color: red;
}
header {
  background-color: aqua;
  color: blue;
}

.content-content-box > div {
  background-color: green;
  width: 300px;
  height: 10px;
  margin: 30px;
  border: 10px solid black;
}

#article-1 {
  background-color: aquamarine;
}
#myp {
  color: blue;
}
.myp {
  font-size: 24px;
}
.back {
  background-color: brown;
}
.color-rojo {
  color: red;
}
.back-azul {
  background-color: blue;
}
/* MODELO DE CAJA */

.contenedor {
  margin: 100px;
  background-color: violet;
  padding: 10px;
  border: 5px solid red;
  color: green;
}
.contenido {
  background-color: aquamarine;
}
.contenedor-con-imagen {
  width: 200px;
  height: 200px;
  padding: 20px;
  background-color: aqua;
  background-image: url("/public/download.jpg");
  background-size: cover;
  background-position: center;
  text-align: center;
}
.contenido-con-imagen {
  background-color: white;
}
/* Selectores */

/* selector por elemento */
span {
  font-weight: bold;
}

/* Asigna los mismos estilos a los elementos con nombres diferentes, esta regla afecta a (en este caso) todos los elementos <p> y <span> */
p,
span {
  color: blueviolet;
}
/* afecta a solo los elementos <p> que se encuentran dentro de la etiqueta <main>, ya sea contenido directo o indirecto */

main p {
  background-color: aquamarine;
}
/* Usa el caracter > para referenciar a un elemento que es hijo directo */
main > section > article > .contenedor-parrafo > p {
  font-size: 25px;
}

/* Este selector hace referencia a elementos que estan precedidos por otros elementos: ambos deben estar al mismo nivel */

h1 + p {
  color: red;
}

/* Estilos mas usados*/
/* Declara el tipo de letra que se usa para mostrar en un texto. Se pueden declarar multiples valores separados por coma para ofrecer al navegadir varias alternativas en vaso de que alguna no se encuentre disponible */
.container {
  border-top: 1px solid black;
  padding: 20px;
  font-family: Georgia, "Times New Roman", Times, serif;
  color: white;
}
.container > .content > p {
  background-color: white;
  color: rgb(0, 0, 0);
  font-size: 25px; /* determina el tamaño de la fuente; puede estar incl. en px, pt, %, rem, em */
  font-weight: 100 /* bold (100 - 1000) */;
  font-style: oblique; /* normal, italic, oblique */
}

.content > h3 {
  background-color: bisque;
  font: bold 30px arial, sans-serif; /* permite declarar varios atributos al mismo tiempo, separados por espacios. 1°grosor, 2°tamaño, 3°familia de fuente */
  text-align: center; /* left, right, center, justify*/
  line-height: 30px; /* define el espacio entre lineas */
}

/* Colores */
.mydiv {
  height: 100px;
  width: 100px;
  border: 1px solid rgb(202, 172, 2);
  padding: 20px;
  background-color: blueviolet;
  background-image: url("/public/download.jpg");
}
.div-in-mydiv {
  height: 50px;
  width: 50px;
  border: 1px solid black;
  background-color: rgba(255, 255, 255, 0.9);
}
.div-in-mydiv-2 {
  height: 50px;
  width: 50px;
  border: 1px solid black;
  background-color: #ff0000; /* 0-9 y A-F */
}

.content {
  font-size: 30px;
}

/* Tamaños */
.div-in-mydiv-3 {
  height: 50px;
  width: 50px;
  margin: 10px 20px 30px 40px;
  border: 1px solid black;
  background-color: #06ce20; /* 0-9 y A-F */
}
.tamano {
  margin: 100px 20px;
  height: 200px;
  width: 200px;
  background-color: black;
}

.tamano-hijo {
  height: 25%;
  width: 25%;
  background-color: red;
}

/* 1vw representa el 1% del ancho de la ventana, mientras que 1vh representa el 1% de la altura de la ventana. */
.div-vh-vw {
  height: 100vh;
  width: calc(100vw - 40px);
  background-color: blue;
}

.punto {
  height: 100pt;
  width: 100pt;
  background-color: red;
}
.div-rem {
  height: 20rem; /* relacion a la fuente de todo el html (documento) */
  width: 20rem;
  background-color: green;
}
.div-em {
  height: 20em; /* relacion a la fuente del contenido */
  width: 20em;
  background-color: blue;
}

.contenedor-de-bordes > div {
  height: 100px;
  width: 100px;
  border-width: 5px;
  border-style: dotted;
  border-color: #06ce20;
  border-radius: 50%;
  margin-top: 20px;
}
.borde-1 {
  border-style: dashed !important;
}
.borde-2 {
  border-style: double !important;
}
.borde-3 {
  border-style: outset !important;
}
.borde-4 {
  border-style: solid !important;
}
.borde-en-una-linea {
  border: 1px solid red; /* tamaño linea (border with). 2° estilo de borde, 3° color */
  border-radius: 50%;
  height: 100px;
  width: 100px;
  margin-top: 20px;
}

/* Flex container afectara no solo a si mismo, tambien a lo que contiene

Es un sistema de elementos flexibles donde los elementos html se adaptan y colocan automaticamente siendo mas facil personalizarlos
*/
/* 
1 - flex-direction : define en que dirección se distribuiran los elementos dentro del contenedor
 - column
 - column-reverse
 - row
 - row-reverse

 2- flex-wrap: define si que los elementos dentro del contenedor puedan saltar a la siguiente fila o columna
 - wrap
 - nowrap

 3- fex-flow : Es una combinacion de las propiedades flex-directio y flex-wrap

 4- justify-conetnt : para alinear el contenido
 - star
 - center
 - end
 - flex-start
 - flex-center
 - flex-end

 5- align-items : se usa para alinear en vertical los elementos dentro del contenedor
 - center
 - start
 - end
 - stretch
 - baseline

 6.-Align-content: para alinear las filas:: after
 - space between
 - space arround
 - strech
 - center
 - flex start
 - flex end
 */

/* display para disponerlo en formato de tarjetas verticales */
/* cloumn, row, reverse, column reverse, row reverse */
/* nowrap, wrap, wrap reverse */

.flex-container {
  display: flex;
  flex-wrap: wrap;
  align-content: space-between;
  font-size: 30px;
  border: 1px solid black;
  padding: 10px;

  height: 300px;
}
/* Flex item */
.flex-container > div {
  /* margin: 10px; */
  background-color: #0956a3;
  padding: 20px;
  width: 100px;
  text-align: center;
  /* la distancia q ocupa el componente en cada salto de linea line height */
  line-height: 70px;
}

.contenedor-perfecto {
  display: flex;
  background-color: gray;
  height: 40vh;
  width: 40vw;
  padding: 50px;
  justify-content: center;
  text-align: center;
}
.contenido-perfecto {
  display: flex;
  background-color: green;
  height: 100px;
  width: 100px;
  align-items: center;
  justify-content: center;
}

/* selector hijo */
/* Comportamiento de elementos hijos dentro de contenedores flex: 

1- order: Especifica el oden de los elementos
2- flex-grow: Determina cuanto crece el elemento relativo al resto de elementos que estan dentro del contenedor flex */

.flex-container-2 {
  display: flex;
  flex-wrap: wrap;
  align-content: space-around;
  font-size: 30px;
  border: 1px solid black;
  padding: 10px;
  align-items: stretch;
}
.flex-container-2 > div {
  display: flex;
  /* margin: 10px; */
  background-color: #007fff;
  padding: 20px;
  width: 100px;
  text-align: center;
  line-height: 70px;
  height: 70px;
}
.flex-container-2 > div:nth-child(1) {
  order: 3; /* para cambiar el orden */
  flex-grow: 1;
  background-color: rgb(95, 170, 204);
}
.flex-container-2 > div:nth-child(2) {
  order: 1;
  flex-grow: 5;
  background-color: blue;
}

.flex-container-2 > div:nth-child(3) {
  order: 2;
  flex-grow: 5;
  background-color: rgb(62, 60, 184);
}

/* Flex - shrink */
/* Determina cuanto se puede encoger un elemento en relación a los demás dentro de un contenedor flex */

.flex-container-3 {
  display: flex;
  align-items: center;
  justify-content: start;
  font-size: 30px;
  border: 1px solid black;
  padding: 10px;
  background-color: gray;
}

.flex-container-3 > div {
  background-color: blue;
  color: white;
  padding: 20px;
  width: 100px;
  margin: 10px;
  text-align: center;
  line-height: 70px;
  font-size: 30px;
}

.flex-container-3 > div:nth-child(2) {
  flex-shrink: 0;
}

/* flex-basic:
Determina una longitud especifica */

.flex-container-3 > div:nth-child(3) {
  flex-basis: 200px;
}
